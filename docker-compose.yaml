version: '3.5'

services:
    postgres_m:
        image: postgres:15-alpine
        container_name: mamushin_db_master
        restart: always
        environment:
            POSTGRES_USER: "postgres"
            POSTGRES_PASSWORD: "postgres"
        ports:
            - "5005:5432"
        networks:
            - "app-network"
        volumes:
            - ./data/postgresql_master/:/var/lib/postgresql/data
    postgres_a:
        image: postgres:15-alpine
        container_name: mamushin_db_async
        restart: always
        environment:
            POSTGRES_USER: "postgres"
            POSTGRES_PASSWORD: "postgres"
        depends_on:
            - postgres_m
        ports:
            - "5006:5432"
        networks:
            - "app-network"
        volumes:
            - ./data/postgresql_async/:/var/lib/postgresql/data
    backend:
        image: mamushin_hw_arc:v2.4
        container_name: mamushin_service
        build: .
        ports:
            - "5000:80"
        links:
            - "postgres_m:database_m"
            - "postgres_a:database_a"
        networks:
            - "app-network"
        environment:
            DB_HOST: "database_m"
            DB_ASYNC_HOST: "database_a"
            DB_PORT: "5432"
            ASPNETCORE_ENVIRONMENT: "Stg"
    
    grafana:
        image: grafana/grafana:9.2.15
        container_name: grafana
        ports:
            - 3000:3000
        volumes:
            - ./grafana/datasources:/etc/grafana/provisioning/datasources
            - ./grafana/grafana-data:/var/lib/grafana
        networks:
            - "app-network"

    prometheus:
        image: prom/prometheus:latest
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
        container_name: prometheus
        hostname: prometheus
        command:
            - --config.file=/etc/prometheus/prometheus.yml
        ports:
            - 9090:9090
        environment:
            TZ: "Europe/Moscow"
        networks:
            - "app-network"
    
    cadvisor:
        image: gcr.io/cadvisor/cadvisor:latest
        container_name: cadvisor
        ports:
            - 8080:8080
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        depends_on:
            - postgres_m
            - postgres_a
            - backend
        networks:
            - "app-network"

networks:
    app-network:
        driver: bridge